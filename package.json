{
  "name": "@aeternity/aepp-calldata",
  "description": "Aeternity data serialization library",
  "version": "1.9.1",
  "author": "aeternity",
  "license": "ISC",
  "type": "module",
  "homepage": "https://github.com/aeternity/aepp-calldata-js#readme",
  "bugs": {
    "url": "https://github.com/aeternity/aepp-calldata-js/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/aeternity/aepp-calldata-js.git"
  },
  "keywords": [
    "aesophia",
    "aeternity",
    "calldata",
    "decoder",
    "encoder",
    "fate",
    "serialization"
  ],
  "main": "cjs/main.cjs",
  "types": "src/main.d.ts",
  "exports": {
    "types": "./src/main.d.ts",
    "import": "./src/main.js",
    "require": "./cjs/main.cjs"
  },
  "files": [
    "cjs/*",
    "src/*"
  ],
  "browser": {
    "./tests/test.js": "./tests/browser/test.js"
  },
  "sideEffects": false,
  "dependencies": {
    "blakejs": "^1.2.1",
    "bs58": "^6.0.0",
    "rlp": "^3.0.0",
    "safe-buffer": "^5.2.1",
    "sha.js": "^2.4.11"
  },
  "devDependencies": {
    "@aeternity/aepp-cli": "^7.0.0",
    "@babel/cli": "^7.25.9",
    "@babel/eslint-parser": "^7.25.9",
    "@babel/plugin-syntax-import-assertions": "^7.26.0",
    "@babel/plugin-transform-modules-commonjs": "^7.25.9",
    "ava": "6.1.3",
    "babel-plugin-transform-rewrite-imports": "^1.5.3",
    "benchmark": "2.1.4",
    "browserify": "17.0.0",
    "eslint": "8.57.0",
    "eslint-config-airbnb-base": "15.0.0",
    "eslint-plugin-import": "2.29.1",
    "nyc": "17.0.0",
    "prettier": "^3.5.3",
    "tape": "5.8.1"
  },
  "ava": {
    "files": [
      "tests/**/*",
      "!tests/test.js",
      "!tests/benchmark/*",
      "!tests/browser/test.js"
    ]
  },
  "nyc": {
    "all": true,
    "include": [
      "src/**/*.js"
    ],
    "temp-dir": "build/.nyc_output"
  },
  "scripts": {
    "browser-test-bundle": "browserify tests/[A-Z]*.js tests/**/*.js > build/js/tests.js",
    "coverage": "nyc ava",
    "build": "babel src --out-dir cjs --out-file-extension .cjs",
    "prepare": "npm run build",
    "test": "ava --verbose",
    "test:watch": "ava --verbose --watch",
    "format": "prettier . --write",
    "lint": "prettier . --check && eslint src tests"
  }
}
